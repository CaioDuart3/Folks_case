{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Apresenta\u00e7\u00e3o do Case","text":"<p>O objetivo deste case \u00e9 desenvolver um sistema inteligente e proativo, que seja capaz de identi\ufb01car automaticamente os pacientes com solicita\u00e7\u00f5es de exames de imagem pendentes. O sistema dever\u00e1 incentivar esses pacientes, atrav\u00e9s do envio de mensagens personalizadas via WhatsApp, a agendar seus exames dentro da rede do grupo hospitalar.</p> <p></p>"},{"location":"arch/","title":"Documento de Arquitetura","text":""},{"location":"arch/#1-introducao","title":"1. Introdu\u00e7\u00e3o","text":""},{"location":"arch/#11-proposito","title":"1.1 Prop\u00f3sito","text":"Este documento descreve a arquitetura de um sistema desenvolvido para analisar planilhas CSV com dados de pacientes, identificar aqueles aptos a receber mensagens e enviar mensagens personalizadas via WhatsApp utilizando servi\u00e7os de mensageria. O objetivo \u00e9 otimizar a comunica\u00e7\u00e3o e agilizar o processo de agendamento de exames. Espera-se alcan\u00e7ar melhorias significativas nos seguintes pontos:   <ul> <li>Aumento da taxa de convers\u00e3o: Facilitando o agendamento de exames.</li> <li>Otimiza\u00e7\u00e3o do uso de recursos: Efici\u00eancia no processamento e envio das mensagens.</li> <li>Fortalecimento do relacionamento com pacientes: Comunica\u00e7\u00e3o mais eficiente e personalizada.</li> </ul>"},{"location":"arch/#12-escopo","title":"1.2 Escopo","text":"A solu\u00e7\u00e3o automatiza a identifica\u00e7\u00e3o de pacientes aptos a realizar exames de imagem, utilizando uma abordagem inteligente e proativa. O processo come\u00e7a com a coleta de dados diretamente das planilhas do Google Sheets, acessadas via API do Google Drive. A partir dessa base, a an\u00e1lise \u00e9 realizada com base no c\u00f3digo TUSS(para dados estruturados) e IA BioBERT( para dados n\u00e3o estruturados), que identifica receitas m\u00e9dicas e verifica a necessidade de exames de imagem. Os pacientes identificados s\u00e3o filtrados e recebem mensagens personalizadas via WhatsApp, incentivando-os a agendar os exames.   O RabbitMQ gerencia a fila de envios, enquanto a API do WhatsApp efetivamente realiza a comunica\u00e7\u00e3o com os pacientes. Os registros de envio s\u00e3o armazenados na mesma planilha de origem, facilitando o acompanhamento e an\u00e1lise dos dados. A integra\u00e7\u00e3o com o Looker Studio permite a cria\u00e7\u00e3o de dashboards para monitorar o desempenho do sistema, como a taxa de envio. A arquitetura do sistema garante automa\u00e7\u00e3o e flexibilidade para ajustes conforme o volume de pacientes e evolu\u00e7\u00e3o das necessidades, com foco na seguran\u00e7a e conformidade com normas de privacidade."},{"location":"arch/#2-representacao-arquitetural","title":"2. Representa\u00e7\u00e3o Arquitetural","text":""},{"location":"arch/#21-definicoes","title":"2.1 Defini\u00e7\u00f5es","text":"O padr\u00e3o arquitetural utilizado neste sistema se trata da arquitetura monol\u00edtica modular, um estilo de desenvolvimento de software que combina a estrutura de uma aplica\u00e7\u00e3o monol\u00edtica com princ\u00edpios de modulariza\u00e7\u00e3o. Nesse modelo, toda a aplica\u00e7\u00e3o \u00e9 desenvolvida e implantada como uma \u00fanica unidade, compartilhando o mesmo espa\u00e7o de mem\u00f3ria, banco de dados e recursos. No entanto, ao inv\u00e9s de ter um c\u00f3digo monol\u00edtico r\u00edgido e dif\u00edcil de manter, a aplica\u00e7\u00e3o \u00e9 organizada em m\u00f3dulos independentes, cada um com suas pr\u00f3prias responsabilidades e l\u00f3gica espec\u00edfica.   Essa modulariza\u00e7\u00e3o interna permite que cada m\u00f3dulo funcione como uma unidade aut\u00f4noma dentro do mon\u00f3lito, facilitando a manuten\u00e7\u00e3o, a escalabilidade e o reaproveitamento de c\u00f3digo. Embora o deploy ainda ocorra de forma conjunta, as mudan\u00e7as realizadas em um m\u00f3dulo tendem a impactar menos outras partes da aplica\u00e7\u00e3o, tornando o processo de desenvolvimento mais seguro e eficiente.   A arquitetura monol\u00edtica modular \u00e9 especialmente vantajosa para projetos que ainda n\u00e3o exigem uma abordagem mais complexa, como microsservi\u00e7os, mas que precisam de uma estrutura organizada e preparada para crescer de forma sustent\u00e1vel. Essa abordagem \u00e9 bastante utilizada em projetos que buscam equil\u00edbrio entre simplicidade na implanta\u00e7\u00e3o e boa separa\u00e7\u00e3o de responsabilidades no c\u00f3digo."},{"location":"arch/#22-justificativa","title":"2.2 Justificativa","text":"A escolha da arquitetura monol\u00edtica modular foi motivada por sua adequa\u00e7\u00e3o \u00e0s necessidades do projeto, oferecendo uma solu\u00e7\u00e3o eficaz sem adicionar complexidade desnecess\u00e1ria. Essa abordagem proporciona diversos benef\u00edcios, como facilidade de manuten\u00e7\u00e3o, organiza\u00e7\u00e3o e reutiliza\u00e7\u00e3o de c\u00f3digo. Al\u00e9m disso, \u00e9 especialmente prop\u00edcia para a aplica\u00e7\u00e3o dos princ\u00edpios S.O.L.I.D, promovendo um design de software mais limpo e sustent\u00e1vel."},{"location":"arch/#3-detalhamento","title":"3. Detalhamento","text":"<p> Figura 1 - Diagrama de refer\u00eancia arquitetural</p> <p>Elementos do modelo no presente sistema: </p> <p>1 - Entrada de dados: API do Google para buscar dados das planilhas na Web</p> <p>2 - Processamento: Componente Interface</p> <p>3 - Servi\u00e7o de Mensageria: utilizando RabbitMQ</p> <p>4 - Interface de Agendamento: Fora do escopo</p> <p>5 - Visualiza\u00e7\u00e3o de dados: Looker Studio e StreamLit</p> <p>6 - Modelo de Machine Learning: BioBERT</p> <p>7 - Sa\u00edda de dados: API do Google para inserir/atualizar dados das planilhas na Web</p> <p>Portanto o diagrama de arquitetura fica no seguinte formato:   Figura 2 - Diagrama de Arquitetura</p>"},{"location":"arch/#4-metas-e-restricoes-arquiteturais","title":"4. Metas e Restri\u00e7\u00f5es Arquiteturais","text":""},{"location":"arch/#41-metas-arquiteturais","title":"4.1 Metas Arquiteturais","text":"As metas arquiteturais do sistema foram definidas para atender \u00e0s necessidades funcionais e n\u00e3o funcionais da aplica\u00e7\u00e3o, garantindo efici\u00eancia, seguran\u00e7a e implata\u00e7\u00e3o em ambientes de produ\u00e7\u00e3o:"},{"location":"arch/#411-implatacao","title":"4.1.1 Implata\u00e7\u00e3o","text":"A implanta\u00e7\u00e3o ser\u00e1 feita de maneira simples e eficiente, com uso de ferramentas como Docker para cont\u00eaineres, garantindo que o sistema seja facilmente replic\u00e1vel em diferentes ambientes."},{"location":"arch/#412-seguranca-de-dados","title":"4.1.2 Seguran\u00e7a de dados","text":"Devido ao uso das APIs do Google e ao armazenamento dos dados no Google Drive, quest\u00f5es de LGPD e seguran\u00e7a dos dados sens\u00edveis s\u00e3o cobertas pelos sistemas de autentica\u00e7\u00e3o e autoriza\u00e7\u00e3o do Google."},{"location":"arch/#413-eficiencia-e-manutunibilidade","title":"4.1.3 Efici\u00eancia e Manutunibilidade:","text":"A arquitetura modular facilita a adi\u00e7\u00e3o de novos recursos e a manuten\u00e7\u00e3o do sistema, al\u00e9m de permitir atualiza\u00e7\u00f5es de forma \u00e1gil, sem comprometer a estabilidade."},{"location":"arch/#42-restricoes-arquiteturais","title":"4.2 Restri\u00e7\u00f5es Arquiteturais","text":""},{"location":"arch/#421-compatibilidade-com-navegadores","title":"4.2.1 Compatibilidade com navegadores","text":"O sistema deve ser compat\u00edvel com navegadores modernos (Chrome, Firefox, Edge, Safari) e dispositivos m\u00f3veis com tela m\u00ednima de 5 polegadas.  <p>Justificativa: \u00c9 importante garantir o acesso a diferentes formatos de dispostivos, impedindo que haja barreiras e limites tecnol\u00f3gicos.</p>"},{"location":"arch/#422-armazenamento-de-dados","title":"4.2.2 Armazenamento de dados","text":"O sistema utilizar\u00e1 o Google Drive para armazenar planilhas CSV. O plano gratuito do Google Drive oferece 15 GB de armazenamento, o que \u00e9 suficiente para armazenar as planilhas de dados estruturados e n\u00e3o estruturados.  <p>Justificativa: Aproveitar a infraestrutura j\u00e1 dispon\u00edvel e escal\u00e1vel do Google Drive.</p>"},{"location":"arch/#423-visualizacao-grafica-de-dados","title":"4.2.3 Visualiza\u00e7\u00e3o gr\u00e1fica de dados","text":"<p>A visualiza\u00e7\u00e3o de dados ser\u00e1 realizada atrav\u00e9s do Streamlit para exibi\u00e7\u00e3o de tabelas e do Looker Studio para gr\u00e1ficos interativos e relat\u00f3rios.</p> <p>Justificativa: Essas ferramentas oferecem flexibilidade e s\u00e3o ideais para an\u00e1lise de dados em tempo real e visualiza\u00e7\u00e3o de grandes volumes de dados.</p>"},{"location":"arch/#5-visao-logica","title":"5. Vis\u00e3o L\u00f3gica","text":"A vis\u00e3o l\u00f3gica do sistema descreve a organiza\u00e7\u00e3o dos componentes e como eles se relacionam para oferecer as funcionalidades propostas. A aplica\u00e7\u00e3o \u00e9 estruturada em tr\u00eas grandes camadas: Interface, Models e Services. Cada camada \u00e9 composta por m\u00f3dulos que encapsulam responsabilidades espec\u00edficas, facilitando a manuten\u00e7\u00e3o, evolu\u00e7\u00e3o e reutiliza\u00e7\u00e3o do c\u00f3digo."},{"location":"arch/#interface","title":"Interface","text":"<p>Objetivo: Oferecer uma interface simples e direta para que o usu\u00e1rio visualize tabelas, dashboards e interaja com o sistema utilizando o Streamlit. Essa camada \u00e9 respons\u00e1vel por gerenciar as entradas do usu\u00e1rio, validar os dados e orquestrar as chamadas aos m\u00f3dulos de processamento e servi\u00e7os de backend.</p> <p>Principais Funcionalidades:</p> <ul> <li> <p>Renderiza\u00e7\u00e3o da Interface: </p> <ul> <li><code>user_interface.py</code>: Implementa a interface principal usando Streamlit, permitindo a visualiza\u00e7\u00e3o de dados e a intera\u00e7\u00e3o com o sistema.</li> </ul> </li> <li> <p>Autentica\u00e7\u00e3o de Usu\u00e1rios: </p> <ul> <li><code>authenticator.py</code>: Gerencia a autentica\u00e7\u00e3o, garantindo acesso seguro e restrito conforme as pol\u00edticas definidas.</li> </ul> </li> <li> <p>Envio de Mensagens: </p> <ul> <li><code>message_sender.py</code> e <code>ui_send_message.py</code>: Respons\u00e1veis pelo disparo de mensagens, integrando a camada de interface com os servi\u00e7os(componente Services) e processamento de dados(componente Models).</li> </ul> </li> <li> <p>Processamento de Dados: </p> <ul> <li><code>processor.py</code>, <code>structured_processor.py</code> e <code>no_structured_processor.py</code>: Executa o processamento de dados, aplicando os devidos filtros e analises dos dados estruturados e n\u00e3o estruturados.</li> </ul> </li> <li> <p>Integra\u00e7\u00e3o com Planilhas: </p> <ul> <li><code>update_sheet.py</code>: Atualiza as planilhas da web.</li> </ul> </li> </ul>"},{"location":"arch/#models","title":"Models","text":"<p>Objetivo: Fornecer a l\u00f3gica de Machine Learning (ML) e processamento de dados para analisar e classificar os clientes como aptos ou n\u00e3o a receberem mensagens.</p> <p>Principais Funcionalidades:</p> <ul> <li> <p>Classifica\u00e7\u00e3o de Exames: </p> <ul> <li><code>exam_classifier.py</code>: Analisa exames identificando padr\u00f5es e poss\u00edveis anomalias nos dados e classifica a rela\u00e7\u00e3o do exames com imagens.</li> </ul> </li> <li> <p>Verifica\u00e7\u00e3o de Imagens: </p> <ul> <li><code>img_exam_checker.py</code>: Processa os textos identificando palavras chaves que tornam o exame do cliente de acordo com as regras de neg\u00f3cio.</li> </ul> </li> <li> <p>Limpeza e Pr\u00e9-processamento de Texto: </p> <ul> <li><code>text_cleaner.py</code>: Sanitiza os dados textuais, preparando-os para an\u00e1lises subsequentes do modelo de ML.</li> </ul> </li> </ul>"},{"location":"arch/#services","title":"Services","text":"<p>Objetivo: Oferecer conex\u00f5es e integra\u00e7\u00f5es com APIs externas e servi\u00e7os de mensageria, como Google Sheets para armazenamento e visualiza\u00e7\u00e3o de dados e RabbitMQ para comunica\u00e7\u00e3o ass\u00edncrona. Essa camada atua como intermedi\u00e1ria na comunica\u00e7\u00e3o entre o sistema e o mundo externo, garantindo a troca de informa\u00e7\u00f5es de forma robusta e escal\u00e1vel.</p> <p>Principais Funcionalidades:</p> <ul> <li> <p>Consumo de Mensagens: </p> <ul> <li><code>consumer.py</code>: Consome as mensagens da fila de mensageria do RabbitMQ.</li> </ul> </li> <li> <p>Publica\u00e7\u00e3o de Mensagens: </p> <ul> <li><code>publisher.py</code>: Gerencia o envio de mensagens para a fila de mensageria do RabbitMQ.</li> </ul> </li> <li> <p>Envio Direto de Mensagens: </p> <ul> <li><code>send_message.py</code>: Envia mensagem no Whatsapp do cliente apto a receber de acordo com as regras de neg\u00f3cio.</li> </ul> </li> <li> <p>Integra\u00e7\u00e3o com Google Sheets: </p> <ul> <li><code>google_sheets.py</code>: Faz a conex\u00e3o com as APIs do Google (Google Drive e Google Sheet).</li> </ul> </li> </ul>  Essa vis\u00e3o l\u00f3gica reflete uma abordagem modular dentro de um mon\u00f3lito, onde cada pacote (Interface, Models e Services) \u00e9 respons\u00e1vel por uma parte distinta da aplica\u00e7\u00e3o. Essa separa\u00e7\u00e3o promove a manuten\u00e7\u00e3o, a evolu\u00e7\u00e3o e a integra\u00e7\u00e3o eficiente do sistema com servi\u00e7os externos.  <p></p> <p>Figura 3 - Diagrama de Camadas</p>"},{"location":"arch/#7-visao-de-implantacao","title":"7. Vis\u00e3o de Implanta\u00e7\u00e3o","text":"A Vis\u00e3o de Implanta\u00e7\u00e3o descreve como o sistema ser\u00e1 disponibilizado e executado no ambiente de produ\u00e7\u00e3o. Essa se\u00e7\u00e3o abordar\u00e1 as tecnologias escolhidas para a constru\u00e7\u00e3o e execu\u00e7\u00e3o do sistema, como Python, RabbitMQ e Docker, destacando suas justificativas. Al\u00e9m disso, apresentar\u00e1 a estrat\u00e9gia de implanta\u00e7\u00e3o em servi\u00e7os cloud."},{"location":"arch/#71-tecnologias-e-justificativas","title":"7.1 Tecnologias e Justificativas","text":"<ul> <li> <p>Python: Linguagem de programa\u00e7\u00e3o back-end  </p> <ul> <li>Justificativa: O Python \u00e9 amplamente utilizado para tarefas de an\u00e1lise de dados devido \u00e0s suas poderosas bibliotecas como pandas e streamlit. Sua simplicidade e facilidade de integra\u00e7\u00e3o com modelos de Machine Learning (como o BioBERT) tornam-no uma escolha ideal para esse projeto.</li> </ul> </li> <li> <p>RabbitMQ: Servi\u00e7o de mensageria Open-Source sendo rodado no Docker  </p> <ul> <li>Justificativa: RabbitMQ \u00e9 uma solu\u00e7\u00e3o robusta e confi\u00e1vel para mensageria, permitindo uma comunica\u00e7\u00e3o ass\u00edncrona eficiente entre os componentes do sistema. Sua simplicidade e flexibilidade s\u00e3o adequadas para o envio de mensagens para os usu\u00e1rios no WhatsApp.</li> </ul> </li> <li> <p>Docker: Plataforma de containeriza\u00e7\u00e3o  </p> <ul> <li>Justificativa: Docker \u00e9 uma ferramenta crucial para garantir que o ambiente de desenvolvimento e produ\u00e7\u00e3o sejam id\u00eanticos, isolando depend\u00eancias e evitando problemas de configura\u00e7\u00e3o. Isso facilita o processo de implanta\u00e7\u00e3o, bem como a manuten\u00e7\u00e3o e a escalabilidade do sistema.</li> </ul> </li> </ul> <p>Bibliotecas:</p> <ul> <li> <p>PyTorch: Biblioteca de Deep Learning e Machine Learning</p> <ul> <li>Justificativa: PyTorch \u00e9 utilizado para executar o modelo BioBERT, uma rede neural pr\u00e9-treinada para Processamento de Linguagem Natural (PLN). Sua flexibilidade e alto desempenho s\u00e3o essenciais para o processamento de dados m\u00e9dicos e a identifica\u00e7\u00e3o de padr\u00f5es, como a an\u00e1lise de receitas m\u00e9dicas.</li> </ul> </li> <li> <p>re: Express\u00f5es regulares em Python  </p> <ul> <li>Justificativa: A biblioteca <code>re</code> \u00e9 usada para realizar o pr\u00e9-processamento de textos, removendo caracteres indesejados e outros elementos que podem interferir na an\u00e1lise de texto do BioBERT. Sua simplicidade e poder tornam-na ideal para a limpeza de dados textuais.</li> </ul> </li> <li> <p>pandas: Biblioteca para manipula\u00e7\u00e3o de dados  </p> <ul> <li>Justificativa: pandas \u00e9 uma ferramenta fundamental para a manipula\u00e7\u00e3o e transforma\u00e7\u00e3o de dados em DataFrames. Ela proporciona opera\u00e7\u00f5es r\u00e1pidas e eficientes de leitura, escrita e filtragem de dados.</li> </ul> </li> <li> <p>Streamlit: Biblioteca Python open-source para desenvolvimento de aplica\u00e7\u00f5es web interativas  </p> <ul> <li>Justificativa: Streamlit \u00e9 uma biblioteca altamente vers\u00e1til e f\u00e1cil de usar para a cria\u00e7\u00e3o interfaces(UI) de dados. Ela permite uma r\u00e1pida prototipagem e customiza\u00e7\u00e3o das visualiza\u00e7\u00f5es de dados, facilitando a intera\u00e7\u00e3o dos usu\u00e1rios com as informa\u00e7\u00f5es, sem necessidade de um front-end complexo.</li> </ul> </li> <li> <p>gspread: Biblioteca Python para trabalhar com o Google Sheets  </p> <ul> <li>Justificativa: gspread \u00e9 a escolha para a integra\u00e7\u00e3o com a API do Google Sheets, permitindo a leitura, escrita e atualiza\u00e7\u00e3o de planilhas de maneira simples. Sua utiliza\u00e7\u00e3o facilita a manipula\u00e7\u00e3o de dados armazenados no Google Drive, essencial para o fluxo de informa\u00e7\u00f5es no sistema.</li> </ul> </li> </ul> <p>Modelo de Machine Learning:</p> <ul> <li>BioBERT: Modelo de ML (Machine Learning)  <ul> <li>Justificativa: BioBERT \u00e9 um modelo pr\u00e9-treinado espec\u00edfico para Processamento de Linguagem Natural (PLN) na \u00e1rea biom\u00e9dica. Ele \u00e9 altamente eficaz para a an\u00e1lise de textos m\u00e9dicos, como receitas e exames, devido ao seu treinamento em grandes bases de dados biom\u00e9dicos. Sua utiliza\u00e7\u00e3o permite a identifica\u00e7\u00e3o precisa de padr\u00f5es em textos, como a extra\u00e7\u00e3o de informa\u00e7\u00f5es relevantes, tornando-o ideal para esse projeto de an\u00e1lise de dados m\u00e9dicos e classifica\u00e7\u00e3o de exames.</li> </ul> </li> </ul>"},{"location":"arch/#72-estrategia-de-implantacao","title":"7.2 Estrat\u00e9gia de implanta\u00e7\u00e3o","text":"<p>O sistema ser\u00e1 implantado na web, utilizando um ambiente de produ\u00e7\u00e3o em servi\u00e7os cloud para garantir integra\u00e7\u00e3o e autentica\u00e7\u00e3o com as APIs. A escolha recai sobre a Google Cloud Platform (GCP), pela sinergia com os servi\u00e7os do Google Sheet e Google Drive.</p> <p>Infraestrutura:</p> <ul> <li>Google Cloud Run:   Utiliza\u00e7\u00e3o do Cloud Run para hospedar tanto o sistema quanto o servi\u00e7o de mensageria em cont\u00eaineres separados, permitindo escalonamento autom\u00e1tico e otimiza\u00e7\u00e3o de custos.  </li> </ul> <p>Exemplo: Para workloads de baixa demanda, o Cloud Run cobra apenas pelo tempo de execu\u00e7\u00e3o (CPU e mem\u00f3ria) e pelo tr\u00e1fego de dados, tornando-o mais econ\u00f4mico que uma VM sempre ativa, fonte: https://cloud.google.com/run.</p> <ul> <li> <p>Benef\u00edcios de utilizar o Cloud Run:</p> </li> <li> <p>Escalabilidade autom\u00e1tica baseada na demanda.  </p> </li> <li>Menor custo para cargas de trabalho intermitentes.  </li> <li>Deploy simplificado via comandos <code>gcloud</code>.  </li> <li>Gerenciamento autom\u00e1tico de certificados SSL e balanceamento de carga.  </li> </ul> <p>A orquestra\u00e7\u00e3o dos cont\u00eaineres ser\u00e1 gerida diretamente pelo Cloud Run, dispensando a necessidade do Docker Compose no ambiente de produ\u00e7\u00e3o.</p>"},{"location":"arch/#8-restricoes-adicionais","title":"8. Restri\u00e7\u00f5es Adicionais","text":"As restri\u00e7\u00f5es adicionais do sistema foram definidas para garantir que o software atenda aos requisitos de neg\u00f3cios e de qualidade necess\u00e1rios ao seu funcionamento, al\u00e9m de proporcionar uma experi\u00eancia segura e eficiente para o usu\u00e1rio."},{"location":"arch/#restricoes-de-negocios","title":"Restri\u00e7\u00f5es de Neg\u00f3cios","text":"<p>Autentica\u00e7\u00e3o Obrigat\u00f3ria:</p>  O sistema ser\u00e1 acess\u00edvel diretamente pela internet, mas exigir\u00e1 que usu\u00e1rios previamente cadastros se autentiquem utilizando credenciais espec\u00edficas (usu\u00e1rio e senha)  <ul> <li>Justificativa: A autentica\u00e7\u00e3o garante que somente usu\u00e1rios autorizados tenham acesso \u00e0s informa\u00e7\u00f5es sens\u00edveis dos clientes.</li> </ul> <p>Acesso Restrito a Perfis em Servi\u00e7os da Google:</p>  Funcionalidades cr\u00edticas, como inser\u00e7\u00e3o, edi\u00e7\u00e3o, remo\u00e7\u00e3o e visualiza\u00e7\u00e3o de dados das planilhas via servi\u00e7os do Google, como Google Drive e Looker studio, necessitam de autoriza\u00e7\u00e3o sobre aquele documento na plataforma (Google Drive, Looker Studio) seja pra inserir, editar, visualizar ou deletar.  <ul> <li>Justificativa: A segmenta\u00e7\u00e3o de funcionalidades por perfis de acesso melhora a seguran\u00e7a e organiza\u00e7\u00e3o do fluxo de trabalho.</li> </ul>"},{"location":"arch/#restricoes-de-qualidade","title":"Restri\u00e7\u00f5es de Qualidade","text":"<p>Usabilidade:</p>  O sistema possui uma interface amig\u00e1vel e intuitiva para aqueles com menores experi\u00eancias em an\u00e1lise de dados, e para os mais experientes oferecem a visualiza\u00e7\u00e3o de dados pelo looker studio, onde possui painel interativo.  <ul> <li>Justificativa: Um design flex\u00edvel facilita o uso do sistema por diferentes perfis de usu\u00e1rios com diferentes graus do conhecimento.</li> </ul> <p>Portabilidade:</p>  O software ser\u00e1 compat\u00edvel com dispositivos m\u00f3veis (Android e iOS) e navegadores modernos (Chrome, Firefox, Safari, Edge).  <ul> <li>Justificativa: Garantir o acesso em m\u00faltiplas plataformas facilita o uso por usu\u00e1rios em diferentes contextos e dispositivos.</li> </ul> <p>Manutenibilidade:</p>  O c\u00f3digo \u00e9 modular e bem documentado, seguindo os padr\u00f5es de desenvolvimento, para facilitar corre\u00e7\u00f5es de erros e futuras expans\u00f5es.  <ul> <li>Justificativa: A capacidade de realizar manuten\u00e7\u00e3o eficiente \u00e9 fundamental para garantir a evolu\u00e7\u00e3o cont\u00ednua do sistema e atender a novas demandas.</li> </ul>"},{"location":"arch/#9-melhorias-e-riscos","title":"9. Melhorias e Riscos","text":"<p>Este documento descreveu a arquitetura atual adotada para resolver o problema, abordando tecnologias, l\u00f3gica de implementa\u00e7\u00e3o e outros aspectos relevantes. No entanto, algumas limita\u00e7\u00f5es e riscos foram identificados, os quais precisam ser considerados para melhorar a efici\u00eancia e robustez do sistema:</p>"},{"location":"arch/#riscos","title":"Riscos:","text":"<ul> <li>Falta de testes: A aus\u00eancia de uma cobertura de testes pode resultar em falhas n\u00e3o previstas no sistema, comprometendo sua estabilidade e a confiabilidade dos dados.</li> <li>Desempenho do modelo de ML (BioBERT): O modelo pr\u00e9-treinado utilizado para an\u00e1lise de dados apresenta um desempenho sub\u00f3timo, levando aproximadamente 10 minutos para processar cerca de 2.500 registros aleat\u00f3rios. Esse tempo de processamento pode se tornar um gargalo \u00e0 medida que o volume de dados cresce.</li> </ul>"},{"location":"arch/#melhorias-propostas","title":"Melhorias Propostas:","text":"<ul> <li>Implementa\u00e7\u00e3o de testes: A introdu\u00e7\u00e3o de testes unit\u00e1rios e de integra\u00e7\u00e3o garantiria maior estabilidade e facilitaria a identifica\u00e7\u00e3o de erros durante o desenvolvimento.</li> <li>Treinamento de modelo de ML espec\u00edfico: Substituir o modelo de ML pr\u00e9-treinado por um modelo customizado e treinado especificamente para a tarefa de an\u00e1lise de receitas, melhorando a precis\u00e3o e efici\u00eancia do processamento.</li> <li>Substitui\u00e7\u00e3o das planilhas por um banco de dados robusto: Migrar o armazenamento de dados de planilhas para uma solu\u00e7\u00e3o de banco de dados mais escal\u00e1vel e eficiente, como o Supabase, oferecendo maior confiabilidade e desempenho.</li> <li>Revis\u00e3o da arquitetura e integra\u00e7\u00e3o total no Streamlit: Consolidar a aplica\u00e7\u00e3o no Streamlit, integrando diretamente com as APIs do Google (Sheets e Drive), para melhorar a intera\u00e7\u00e3o e facilitar o fluxo de dados, simplificando a gest\u00e3o da aplica\u00e7\u00e3o.</li> </ul> <p>Essas melhorias visam otimizar o desempenho do sistema, reduzir riscos operacionais e aumentar a escalabilidade para atender a futuros desafios.</p>"},{"location":"arch/#10-bibliografia","title":"10. Bibliografia","text":"<p>DOCKER. Documenta\u00e7\u00e3o oficial do Docker. Dispon\u00edvel em: https://docs.docker.com/. Acesso em: 12 mar. 2025.</p> <p>RABBITMQ. Documenta\u00e7\u00e3o oficial do RabbitMQ. Dispon\u00edvel em: https://www.rabbitmq.com/docs. Acesso em: 12 mar. 2025.</p> <p>RABBITMQ COM PYTHON. RabbitMQ com Python. Dispon\u00edvel em: https://youtu.be/6PHr1NwlQaU?si=Zn_N5KD4kkzUnwiJ.</p> <p>HUGGING FACE. Hugging Face. Dispon\u00edvel em: https://huggingface.co/. Acesso em: 12 mar. 2025.</p> <p>PYTHON. Documenta\u00e7\u00e3o oficial do Python. Dispon\u00edvel em: https://docs.python.org/pt-br/. Acesso em: 12 mar. 2025.</p> <p>STREAMLIT. Documenta\u00e7\u00e3o oficial do Streamlit. Dispon\u00edvel em: https://docs.streamlit.io/. Acesso em: 12 mar. 2025.</p> <p>YOUTUBE. Como usar as IAs do Hugging Face. Dispon\u00edvel em: https://www.youtube.com/watch?v=Vlv2GAGcPgI. Acesso em: 12 mar. 2025.</p>"},{"location":"arch/#tabela-de-versionamento","title":"Tabela de Versionamento","text":"<p>Abaixo est\u00e1 o hist\u00f3rico de vers\u00f5es do documento presente:</p> Vers\u00e3o Data Descri\u00e7\u00e3o 1.0.0 11/03/2025 Cria\u00e7\u00e3o do documento."}]}